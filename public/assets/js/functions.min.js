class Autocomplete{constructor({container:e,id:t,options:s,selected:i}){this.elements={container:e,close:null,hidden:null,input:null,list:null},this.id=t,this.options=s,this.filteredOptions=s,this.selectedIndex=0,this.initialId=i,this.currentLabel="",this.open=!1,this.isCloseVisible=!1,this.init()}static get(e){const t=new Autocomplete(e);return window.autocomplete=window.autocomplete||{},window.autocomplete[e.id]=t,t}init(){if(this.elements.container.setAttribute("class","select"),this.elements.container.addEventListener("focusout",Autocomplete.onFocusOut),this.elements.input=document.createElement("input"),this.elements.input.setAttribute("autocomplete","off"),this.elements.input.setAttribute("class","select-input"),this.elements.input.setAttribute("id",this.id),this.elements.input.setAttribute("spellcheck","false"),this.elements.input.setAttribute("type","text"),this.initialId){const e=this.options.find((({value:e})=>e===this.initialId));e&&(this.elements.input.value=e.label,this.currentLabel=e.label)}this.elements.input.addEventListener("focus",Autocomplete.onFocusInput),this.elements.input.addEventListener("mousedown",Autocomplete.onClickInput),this.elements.input.addEventListener("keydown",Autocomplete.onKeydownInput),this.elements.input.addEventListener("keyup",Autocomplete.onKeyupInput),this.elements.container.appendChild(this.elements.input),this.elements.close=document.createElement("button"),this.elements.close.setAttribute("class","select-close"),this.elements.close.setAttribute("data-id",this.id),this.elements.close.setAttribute("type","button"),this.elements.close.innerText="Close",this.elements.close.addEventListener("click",Autocomplete.onClickClose),this.currentLabel&&this.showClose(),this.elements.container.appendChild(this.elements.close),this.elements.list=document.createElement("ul"),this.elements.list.setAttribute("class","select-list"),this.elements.list.setAttribute("tabindex","-1"),this.elements.container.appendChild(this.elements.list),this.elements.hidden=document.createElement("input"),this.elements.hidden.setAttribute("class","select-hidden"),this.elements.hidden.setAttribute("name",this.id),this.elements.hidden.setAttribute("type","hidden"),this.initialId&&(this.elements.hidden.setAttribute("data-value",this.currentLabel),this.elements.hidden.value=this.initialId),this.elements.container.appendChild(this.elements.hidden),this.setOptions();const e=this.elements.list.querySelector(`[value="${this.initialId}"]`);e&&(e.classList.add("selected"),this.selectedIndex=e.getAttribute("data-index"),e.scrollIntoView({block:"nearest"}))}setOptions(e=""){this.filteredOptions=this.options,e&&(e=e.toLowerCase().trim(),this.filteredOptions=this.filteredOptions.filter((({label:t})=>t.toLowerCase().match(new RegExp(`(^|[^a-z])${e}`))))),this.elements.list.innerText="",this.filteredOptions.forEach((({value:e,label:t},s)=>{const i=document.createElement("li");i.setAttribute("class","select-item");const n=document.createElement("button");n.setAttribute("class","select-button"),n.setAttribute("data-index",s),n.setAttribute("data-name",this.id),n.setAttribute("tabindex","-1"),n.setAttribute("type","button"),n.value=e,n.addEventListener("click",Autocomplete.onClickItem),n.addEventListener("mouseenter",Autocomplete.onMouseenterItem),n.innerText=t,i.appendChild(n),this.elements.list.appendChild(i)}))}hideList(){this.open&&(this.elements.list.classList.remove("show"),this.open=!1)}showList(){this.open||(this.elements.list.classList.add("show"),this.open=!0)}hideClose(){this.isCloseVisible&&(this.elements.close.classList.remove("show"),this.isCloseVisible=!1)}showClose(){this.isCloseVisible||(this.elements.close.classList.add("show"),this.isCloseVisible=!0)}setSelectedIndex(e){e=parseInt(e,10),this.selectedIndex=e;const t=this.elements.list.querySelector(".selected");t&&t.classList.remove("selected");const s=this.elements.list.querySelector(`[data-index="${e}"]`);s&&(s.classList.add("selected"),s.scrollIntoView({block:"nearest"}))}clearInput(){this.currentLabel="",this.elements.input.value="",this.elements.hidden.value="",this.elements.hidden.setAttribute("data-value",""),this.setOptions(),this.setSelectedIndex(0)}setValue(e){this.currentLabel=e.innerText,this.elements.input.value=e.innerText,this.elements.hidden.value=e.value,this.elements.hidden.setAttribute("data-value",e.innerText),this.elements.input.focus(),this.hideList()}static onKeydownInput(e){const t=e.target.getAttribute("id"),s=window.autocomplete[t];if("ArrowDown"===e.key)s.showList(),s.selectedIndex>=s.filteredOptions.length-1?s.setSelectedIndex(0):s.setSelectedIndex(s.selectedIndex+1);else if("ArrowUp"===e.key)s.showList(),s.selectedIndex>0?s.setSelectedIndex(s.selectedIndex-1):s.setSelectedIndex(s.filteredOptions.length-1);else if("Enter"===e.key&&s.open){e.preventDefault();const t=s.elements.list.querySelector(".selected");t&&s.setValue(t)}}static onKeyupInput(e){const t=e.target.getAttribute("id"),s=window.autocomplete[t];e.target.value.trim()!==s.currentLabel.trim()&&(s.showList(),s.currentLabel=e.target.value,s.setOptions(s.currentLabel),s.setSelectedIndex(0))}static onFocusOut(e){const t=e.target.closest(".select"),s=e.relatedTarget?e.relatedTarget.closest(".select"):null;if(s&&t.getAttribute("id")===s.getAttribute("id"))return;const i=t.querySelector(".select-input"),n=i.getAttribute("id"),l=window.autocomplete[n];i.value!==l.elements.hidden.getAttribute("data-value")?(l.clearInput(),l.hideList(),l.hideClose()):(l.hideList(),""===l.currentLabel&&l.hideClose())}static onFocusInput(e){const t=e.target.getAttribute("id"),s=window.autocomplete[t];s.showList(),s.showClose()}static onClickInput(e){const t=e.target.getAttribute("id"),s=window.autocomplete[t];s.open?(s.hideList(),""===s.currentLabel&&s.hideClose()):(s.showList(),s.showClose())}static onClickItem(e){const t=e.target,s=t.getAttribute("data-name"),i=window.autocomplete[s];i.setValue(t),i.setSelectedIndex(t.getAttribute("data-index"))}static onMouseenterItem(e){const t=e.target,s=t.getAttribute("data-name");window.autocomplete[s].setSelectedIndex(t.getAttribute("data-index"))}static onClickClose(e){const t=e.target.getAttribute("data-id"),s=window.autocomplete[t];s.open||s.clearInput(),s.hideList(),""===s.currentLabel&&s.hideClose()}static closeAll(){Object.values(window.autocomplete).forEach((e=>{e.hideList()}))}}function request(e,t){const s=new XMLHttpRequest;s.onreadystatechange=()=>{s.readyState===XMLHttpRequest.DONE&&t(s.responseText)},s.open("GET",e,!0),s.setRequestHeader("X-Requested-With","XMLHttpRequest"),s.send(null)}function showResults(e){document.getElementById("results").classList.add("show");const t=document.getElementById("results-message");t.innerText=e.message;const s=e.path.length,i=document.getElementById("results-list");let n;for(i.innerText="",n=0;n<s;n+=1){const t=document.createElement("li");t.setAttribute("class","result-item");const s=document.createElement("div");s.setAttribute("class",`result-image ${e.path[n].status}`),s.style.backgroundImage=e.path[n].image?`url("${e.path[n].image}")`:'url("/assets/img/user.png")',t.appendChild(s);const l=document.createElement("div");l.setAttribute("class","result-name"),l.innerText=e.path[n].name,t.appendChild(l),i.appendChild(t)}setTimeout((()=>{t.classList.add("show"),i.classList.add("show")}),300)}function showSpinner(){const e=document.getElementById("spinner");return e.classList.add("show"),e}function hideSpinner(e){e.classList.remove("show")}Autocomplete.get({container:document.getElementById("p1-container"),id:"p1",options:window.people,selected:window.selectedP1}),Autocomplete.get({container:document.getElementById("p2-container"),id:"p2",options:window.people,selected:window.selectedP2}),document.body.classList.add("js"),document.body.addEventListener("keydown",(e=>{"Escape"===e.key&&Autocomplete.closeAll()})),window.response&&(document.getElementById("search").classList.add("shrink"),document.getElementById("results").classList.add("show"),showResults(window.response)),document.getElementById("form").addEventListener("submit",(e=>{e.preventDefault(),document.getElementById("search").classList.add("shrink"),document.getElementById("results").classList.add("show");const t=document.getElementById("results-message");t.classList.remove("show");const s=document.getElementById("results-list");s.classList.remove("show");const i=window.autocomplete.p1.elements.hidden.value,n=window.autocomplete.p2.elements.hidden.value;if(!i||!n)return void showResults({message:"Please select two people.",path:[]});const l=`?p1=${i}&p2=${n}`,o=`${window.autocomplete.p1.elements.input.value} & ${window.autocomplete.p2.elements.input.value} | Corrieography`;document.title=o,window.history.pushState({},o,l),setTimeout((()=>{t.innerText="",s.innerText="";const e=showSpinner();request(`/search${l}`,(t=>{hideSpinner(e),setTimeout((()=>{showResults(t=JSON.parse(t))}),300)}))}),300)}));